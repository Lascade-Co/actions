name: "Docker Build and Push"

on:
  repository_dispatch:
    types: [docker-build]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Mint GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ github.event.client_payload.repo }}

      - name: Checkout target repo @ branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          submodules: "recursive"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Get registry name
        id: registry
        run: |
          REGISTRY=$(doctl registry get --format Name --no-header)
          echo "name=registry.digitalocean.com/${REGISTRY}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.event.client_payload.build_context || '.' }}
          file: ${{ github.event.client_payload.dockerfile_path || 'Dockerfile' }}
          push: true
          tags: |
            ${{ steps.registry.outputs.name }}/${{ github.event.client_payload.container_name }}:${{ github.event.client_payload.sha }}
            ${{ steps.registry.outputs.name }}/${{ github.event.client_payload.container_name }}:latest