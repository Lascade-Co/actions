name: Central Build & Release Android App

on:
  repository_dispatch:
    types: [release-android]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: release-android-${{ github.event.client_payload.repo }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      owner: ${{ steps.repo.outputs.owner }}
      name: ${{ steps.repo.outputs.name }}
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Extract owner/repo
        id: repo
        run: |
          FULL="${{ github.event.client_payload.repo }}"   # e.g. Lascade-Co/travel-animator-android
          echo "owner=${FULL%%/*}" >> "$GITHUB_OUTPUT"     # Lascade-Co
          echo "name=${FULL#*/}"   >> "$GITHUB_OUTPUT"     # travel-animator-android

      - name: Resolve branch
        id: branch
        run: |
          BR="${{ github.event.client_payload.branch }}"
          echo "branch=${BR:-main}" >> "$GITHUB_OUTPUT"

  build-aab:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Mint GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ needs.prepare.outputs.owner }}
          repositories: ${{ needs.prepare.outputs.name }}

      - name: Checkout target repo @ branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: refs/heads/${{ needs.prepare.outputs.branch }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Fetch local.properties from Infisical (prod)
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "prod"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Local-Properties
          export-type: file
          file-output-path: /local.properties

      - name: Clean local.properties
        run: sed -i -e "s/'//g" local.properties

      - name: Fetch keystore secrets as env (prod)
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "prod"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Build
          export-type: env

      - name: Decode keystore
        run: echo "${{ env.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Increment Version Numbers
        id: increment_version
        run: bash increment_version.sh

      - name: Build bundleRelease (AAB)
        run: ./gradlew --no-daemon --configuration-cache bundleRelease

      - name: Zip native debug symbols if not pre-zipped
        if: ${{ hashFiles('app/release/native-debug-symbols.zip') == '' }}
        run: |
          if [ -d app/build/outputs/native-debug-symbols/release ]; then
            (cd app/build/outputs/native-debug-symbols/release && zip -r ../../../release/native-debug-symbols.zip .)
          fi

      - name: Upload AAB + symbols
        uses: actions/upload-artifact@v4
        with:
          name: aab
          path: |
            app/build/outputs/bundle/release/app-release.aab
            app/release/native-debug-symbols.zip
          if-no-files-found: warn

  build-apk:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Mint GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ needs.prepare.outputs.owner }}
          repositories: ${{ needs.prepare.outputs.name }}

      - name: Checkout target repo @ branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: refs/heads/${{ needs.prepare.outputs.branch }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Fetch local.properties from Infisical (prod)
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "prod"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Local-Properties
          export-type: file
          file-output-path: /local.properties

      - name: Clean local.properties
        run: sed -i -e "s/'//g" local.properties

      - name: Fetch keystore secrets as env (prod)
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "prod"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Build
          export-type: env

      - name: Decode keystore
        run: echo "${{ env.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Increment Version Numbers
        id: increment_version
        run: bash increment_version.sh

      - name: Build assembleRelease (APK)
        run: ./gradlew --no-daemon --configuration-cache assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/app-release.apk

  release:
    needs: [prepare, build-aab, build-apk]
    runs-on: ubuntu-latest
    steps:
      - name: Mint GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ needs.prepare.outputs.owner }}
          repositories: ${{ needs.prepare.outputs.name }}

      - name: Checkout target repo @ branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: refs/heads/${{ needs.prepare.outputs.branch }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Determine HEAD SHA for tag
        id: headsha
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Increment Version Numbers
        id: increment_version
        run: bash increment_version.sh
        # Script must: echo "new_version=<ver>" >> "$GITHUB_OUTPUT"

      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: aab

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: apk

      - name: Create GitHub Release in source repo
        uses: softprops/action-gh-release@v2
        with:
          repository: ${{ github.event.client_payload.repo }}
          token: ${{ steps.app-token.outputs.token }}
          tag_name: ${{ steps.increment_version.outputs.new_version }}
          target_commitish: ${{ steps.headsha.outputs.sha }}
          name: Release ${{ steps.increment_version.outputs.new_version }}
          files: |
            **/app-release.aab
            **/native-debug-symbols.zip
            app-release.apk

      - name: Commit Version Number Increment and Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add gradle.properties
          git commit -m "[skip ci] Increment version number to ${{ steps.increment_version.outputs.new_version }}" || echo "No changes"
          git push origin HEAD:${{ needs.prepare.outputs.branch }}
