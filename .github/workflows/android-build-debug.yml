name: Central Build Debug APK

on:
  repository_dispatch:
    types: [build-debug-apk]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: build-debug-apk-${{ github.event.client_payload.repo }}-${{ github.event.client_payload.pr || github.event.client_payload.branch }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Extract owner/repo
        id: repo
        shell: bash
        run: |
          FULL="${{ github.event.client_payload.repo }}"   # e.g. Lascade-Co/travel-animator-android
          echo "owner=${FULL%%/*}" >> "$GITHUB_OUTPUT"     # Lascade-Co
          echo "name=${FULL#*/}"   >> "$GITHUB_OUTPUT"     # travel-animator-android

      # Mint a GitHub App token scoped to that one repo
      - name: Mint GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ steps.repo.outputs.owner }}
          repositories: ${{ steps.repo.outputs.name }}

      - name: Purge previous comments from this workflow
        if: ${{ github.event.client_payload.pr && github.event.client_payload.pr != '' && github.event.client_payload.pr != 'null' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const [owner, repo] = "${{ github.event.client_payload.repo }}".split("/");
            const issue_number = Number("${{ github.event.client_payload.pr }}");
            const marker = "<!-- central-build-debug -->";
            const comments = await github.paginate(
              github.rest.issues.listComments,
              { owner, repo, issue_number, per_page: 100 }
            );
            let deleted = 0;
            for (const c of comments) {
              if ((c.body || "").includes(marker)) {
                await github.rest.issues.deleteComment({ owner, repo, comment_id: c.id });
                deleted++;
              }
            }
            core.info(`Deleted ${deleted} prior central-build-debug comments`);


      - name: Comment on PR About Action Status
        uses: peter-evans/create-or-update-comment@v4
        id: status
        with:
          edit-mode: 'replace'
          token: ${{ steps.app-token.outputs.token }}
          repository: ${{ github.event.client_payload.repo }}
          issue-number: ${{ github.event.client_payload.pr }}
          body: |
            <!-- central-build-debug -->
            üèóÔ∏è Build started.
            Watch progress [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Decide ref to checkout (PR HEAD or named branch)
        id: ref
        run: |
          PR="${{ github.event.client_payload.pr }}"
          BR="${{ github.event.client_payload.branch }}"
          if [ -n "$PR" ] && [ "$PR" != "null" ]; then
            echo "ref=refs/pull/${PR}/head" >> $GITHUB_OUTPUT
          elif [ -n "$BR" ]; then
            echo "ref=refs/heads/${BR}" >> $GITHUB_OUTPUT
          else
            echo "No PR or branch in payload" >&2
            exit 1
          fi

      - name: Checkout target repo at PR HEAD/branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: ${{ steps.ref.outputs.ref }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
        # PR HEAD via refs/pull/<PR>/head (not the merge ref). :contentReference[oaicite:5]{index=5}

      - uses: rohittp0/wiregaurd@v2
        with:
          config: ${{ secrets.WG_CONFIG_BASE64 }}

      # === Infisical: export local.properties file ===
      - name: Fetch local.properties from Infisical
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "staging"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Local-Properties
          export-type: file
          file-output-path: /local.properties

      - name: Clean local.properties
        run: sed -i -e "s/'//g" local.properties

      # === Infisical: export keystore secrets to env ===
      - name: Fetch keystore secrets from Infisical as env
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: ${{ github.event.client_payload.project_slug }}
          env-slug: "staging"
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          secret-path: /Build
          export-type: env  # default, but set explicitly

      - name: Decode JKS keystore
        run: echo "${{ env.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore-debug.jks

      - name: Decode Google Service JSON
        run: echo "${{ env.SERVICE_JSON_BASE64 }}" | base64 --decode > google-services.json

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew --no-daemon assembleDebug
        env:
          KEYSTORE_PASSWORD_DEBUG: ${{ env.KEYSTORE_PASSWORD }}
          KEY_ALIAS_DEBUG: ${{ env.KEY_ALIAS }}
          KEY_PASSWORD_DEBUG: ${{ env.KEY_PASSWORD }}

      - name: Upload to Firebase App Distribution
        run: ./gradlew --no-daemon appDistributionUploadDebug || echo "Failed to upload"

      - name: Create Debug Release in source repo
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          repository: ${{ github.event.client_payload.repo }}
          token: ${{ steps.app-token.outputs.token }}
          tag_name: ${{ format('debug-pr-{0}', github.event.client_payload.pr) }}
          name: ${{ github.event.client_payload.title || 'Debug APK' }}
          prerelease: true
          files: app/build/outputs/apk/debug/app-debug.apk
        # action-gh-release supports cross-repo via repository+token. :contentReference[oaicite:8]{index=8}

      - name: Comment on PR with debug APK link
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: ${{ github.event.client_payload.repo }}
          issue-number: ${{ github.event.client_payload.pr }}
          comment-id: ${{ steps.status.outputs.comment-id }}
          edit-mode: 'replace'
          body: |
            <!-- central-build-debug -->
            ‚úÖ Debug APK is ready: [Download](${{ steps.create_release.outputs.url }})
            Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}    

          # ---------- Failure comment ----------
      - name: Comment on PR if build failed
        if: ${{ failure() && github.event.client_payload.pr && github.event.client_payload.pr != '' && github.event.client_payload.pr != 'null' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.status.outputs.comment-id }}
          token: ${{ steps.app-token.outputs.token }}
          repository: ${{ github.event.client_payload.repo }}
          issue-number: ${{ github.event.client_payload.pr }}
          edit-mode: 'replace'
          body: |
            <!-- central-build-debug -->
            ‚ùå Build failed.
            [Check logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      
